{"version":3,"file":"105.54373ecb3cfdf8a907fa.js","mappings":"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","sources":["webpack://auth/./src/components/AuthComponent.tsx","webpack://auth/./src/components/App/App.tsx","webpack://auth/./src/components/App/App.module.scss?7d66","webpack://auth/../../node_modules/react/jsx-runtime.js","webpack://auth/./src/components/UI/SignWithGoogle/SignWithGoogle.tsx","webpack://auth/./src/components/UI/SignWithGoogle/SignWithGoogle.module.scss?a972","webpack://auth/../../packages/shared/src/components/UI/InputData/InputData.module.scss?26b7","webpack://auth/../../packages/shared/src/components/UI/InputData/InputData.tsx","webpack://auth/../../node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://auth/./src/components/UI/ButtonRegister/ButtonRegister.module.scss?6deb","webpack://auth/./src/components/UI/ButtonRegister/ButtonRegister.tsx","webpack://auth/./src/components/UI/Devider/Devider.module.scss?ed83","webpack://auth/./src/components/UI/Devider/Devider.tsx","webpack://auth/./src/utils/styles/modules/VerificationForm.module.scss?73c4","webpack://auth/./src/components/VerificationForm.tsx","webpack://auth/./src/components/RegisterForm.tsx","webpack://auth/../../packages/shared/src/routes/api.ts","webpack://auth/./src/utils/styles/modules/RegisterForm.module.scss?093f","webpack://auth/./src/components/LoginForm.tsx","webpack://auth/../../packages/shared/src/components/UI/ErrorMassage/ErrorMassage.module.scss?c6a8","webpack://auth/../../packages/shared/src/components/UI/ErrorMassage/ErrorMassage.tsx","webpack://auth/./src/components/UI/Terms/Terms.module.scss?fe21","webpack://auth/./src/components/UI/Terms/Terms.tsx","webpack://auth/../../packages/shared/src/utils/hooks/useFetch.ts","webpack://auth/./src/components/UI/LoginLink/LoginLink.module.scss?5d03","webpack://auth/./src/components/UI/LoginLink/LoginLink.tsx"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nconst AuthComponent = () => {\n    const [switchForm, setSwitchForm] = useState({ type: 'register' });\n    const location = useLocation();\n    const isVerificationRoute = location.pathname.endsWith('/verify');\n    return (_jsx(\"div\", { children: _jsx(Outlet, {}) }));\n};\nexport default AuthComponent;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport cl from './App.module.scss';\nimport AuthComponent from '../AuthComponent';\nexport const App = () => {\n    return (_jsx(\"div\", { className: cl.registerWrapper, children: _jsx(AuthComponent, {}) }));\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"registerWrapper\":\"SOg41ljj\"};","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport cl from './SignWithGoogle.module.scss';\nimport { useNavigate } from 'react-router-dom';\nimport { api } from '@packages/shared/src/routes/api';\nconst SignWithGoogle = () => {\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n    const handleMockGoogleLogin = () => __awaiter(void 0, void 0, void 0, function* () {\n        setLoading(true);\n        yield new Promise((res) => setTimeout(res, 2000));\n        const mockUser = {\n            name: 'Сергій Google',\n            email: 'serhii@gmail.com',\n            avatar: 'https://i.pravatar.cc/150?u=google',\n            provider: 'google'\n        };\n        localStorage.setItem('user', JSON.stringify(mockUser));\n        navigate(`/${api}/shop`);\n    });\n    return (_jsxs(\"button\", { className: cl.googleButton, onClick: handleMockGoogleLogin, disabled: loading, children: [_jsx(\"span\", { className: cl.googleIcon, children: _jsx(\"img\", { src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c1/Google_%22G%22_logo.svg/480px-Google_%22G%22_logo.svg.png\", alt: \"Google logo\" }) }), loading ? 'Завантаження...' : 'Продовжити з Google'] }));\n};\nexport default SignWithGoogle;\n","// extracted by mini-css-extract-plugin\nexport default {\"googleButton\":\"D7mRU7sd\",\"googleIcon\":\"N2oFa9Qw\"};","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"Sgj9lMxY\",\"input\":\"mJ7TjZ0Y\",\"label\":\"LbkLIEaX\"};","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport cl from './InputData.module.scss';\nconst InputData = ({ type, placeholder, label, min, max, id, required, onInput }) => {\n    const inputProps = {\n        type,\n        className: cl.input,\n        id,\n        placeholder,\n        min,\n        max,\n        required,\n    };\n    if (type === 'password') {\n        inputProps.minLength = 8;\n        inputProps.title = 'Пароль повинен містити щонайменше 8 символів';\n    }\n    if (type === 'email') {\n        inputProps.pattern = '[a-zA-Z0-9._%+\\\\-]+@[a-zA-Z0-9.\\\\-]+\\\\.[a-zA-Z]{2,}';\n    }\n    return (_jsxs(\"div\", { className: cl.inputContainer, children: [_jsx(\"label\", { className: cl.label, htmlFor: id, children: label }), _jsx(\"input\", Object.assign({}, inputProps, { onInput: (e) => { onInput(e.currentTarget.value); } }))] }));\n};\nexport default InputData;\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","// extracted by mini-css-extract-plugin\nexport default {\"submitButton\":\"iHQwJsNU\"};","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport cl from './ButtonRegister.module.scss';\nconst ButtonRegister = ({ text, onClick }) => {\n    return (_jsx(\"button\", { type: \"submit\", className: cl.submitButton, onClick: onClick, children: text }));\n};\nexport default ButtonRegister;\n","// extracted by mini-css-extract-plugin\nexport default {\"divider\":\"x_11IAzc\"};","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport cl from './Devider.module.scss';\nconst Devider = () => {\n    return (_jsx(\"div\", { className: cl.divider, children: \"\\u0410\\u0411\\u041E\" }));\n};\nexport default Devider;\n","// extracted by mini-css-extract-plugin\nexport default {\"codeInputContainer\":\"ChbATTJh\",\"codeInput\":\"QCnkxqSu\"};","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n// import React, { useState, useRef, useEffect, KeyboardEvent, ClipboardEvent } from 'react';\n// import cl from '../utils/styles/modules/VerificationForm.module.scss';\n// import { FormType } from '@/utils/type/FormType';\n// import { useFetch } from '@packages/shared/src/utils/hooks/useFetch';\n// import ButtonRegister from './UI/ButtonRegister/ButtonRegister';\n// interface VerificationCodeInputProps {\n//     setSwitchForm?: React.Dispatch<React.SetStateAction<FormType>>;\n//     length?: number;\n//     disabled?: boolean;\n//     autoFocus?: boolean;\n//     className?: string;\n// }\n// export const VerificationForm: React.FC<VerificationCodeInputProps> = ({\n//     length = 6,\n//     disabled = false,\n//     autoFocus = true,\n//     className = '',\n// }) => {\n//     const [code, setCode] = useState<string[]>(Array(length).fill(''));\n//     const inputRefs = useRef<(HTMLInputElement | null)[]>([]);\n//     useEffect(() => {\n//         inputRefs.current = inputRefs.current.slice(0, length);\n//         if (autoFocus && inputRefs.current[0]) inputRefs.current[0].focus();\n//     }, [length, autoFocus]);\n//     const updateCode = (index: number, value: string) => {\n//         if (!/^\\d*$/.test(value)) return;\n//         const updated = [...code];\n//         updated[index] = value.slice(-1);\n//         setCode(updated);\n//         if (value && index < length - 1) inputRefs.current[index + 1]?.focus();\n//     };\n//     const handleKey = (index: number, e: KeyboardEvent<HTMLInputElement>) => {\n//         const updated = [...code];\n//         if (e.key === 'Backspace') {\n//             if (!code[index] && index > 0) {\n//                 updated[index - 1] = '';\n//                 setCode(updated);\n//                 inputRefs.current[index - 1]?.focus();\n//             } else {\n//                 updated[index] = '';\n//                 setCode(updated);\n//             }\n//         } else if (e.key === 'ArrowLeft' && index > 0) {\n//             inputRefs.current[index - 1]?.focus();\n//         } else if (e.key === 'ArrowRight' && index < length - 1) {\n//             inputRefs.current[index + 1]?.focus();\n//         }\n//     };\n//     const handlePaste = (e: ClipboardEvent<HTMLInputElement>) => {\n//         e.preventDefault();\n//         const digits = e.clipboardData.getData('text/plain').replace(/\\D/g, '').slice(0, length);\n//         if (!digits) return;\n//         const updated = [...code];\n//         digits.split('').forEach((digit, i) => { if (i < length) updated[i] = digit; });\n//         setCode(updated);\n//         const nextIndex = updated.findIndex(d => !d);\n//         inputRefs.current[nextIndex === -1 ? length - 1 : nextIndex]?.focus();\n//     };\n//     const { response, error, fetchData } = useFetch<number>();\n//     useEffect(() => {\n//         fetchData({\n//             method: 'GET',\n//             port: 4004,\n//             url: 'auth/verify',\n//         });\n//     }, [])\n//     useEffect(() => {\n//         setCode(response)\n//     }, [response])\n//     const handleSubmit = () =>{\n//         fetchData({\n//             method: 'POST',\n//             port: 4004,\n//             url: 'auth/verify',\n//             body: {userCode: code}\n//         });\n//     }\n//     return (\n//         <form className={`${cl.codeInputContainer} ${className}`} onSubmit={handleSubmit}>\n//             {Array.from({ length }, (_, index) => (\n//                 <input\n//                     key={index}\n//                     ref={el => (inputRefs.current[index] = el)}\n//                     type=\"text\"\n//                     inputMode=\"numeric\"\n//                     pattern=\"\\d*\"\n//                     maxLength={1}\n//                     value={code[index] || ''}\n//                     onChange={e => updateCode(index, e.target.value)}\n//                     onKeyDown={e => handleKey(index, e)}\n//                     onPaste={index === 0 ? handlePaste : undefined}\n//                     onFocus={e => e.target.select()}\n//                     disabled={disabled}\n//                     aria-label={`Digit ${index + 1} of verification code`}\n//                     className={cl.codeInput}\n//                     autoComplete=\"one-time-code\"\n//                 />\n//             ))}\n//             <ButtonRegister\n//                 text=\"Відправити\"\n//             />\n//         </form>\n//     );\n// };\n// export default VerificationForm;\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport cl from '../utils/styles/modules/VerificationForm.module.scss';\nimport { useFetch } from '@packages/shared/src/utils/hooks/useFetch';\nimport ButtonRegister from './UI/ButtonRegister/ButtonRegister';\nimport { api } from '@packages/shared/src/routes/api';\nconst VerificationForm = ({ length = 6, disabled = false, autoFocus = true, className = '', }) => {\n    var _a, _b;\n    const [code, setCode] = useState(Array(length).fill(''));\n    const [isError, setIsError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const inputRefs = useRef([]);\n    const navigate = useNavigate();\n    const location = useLocation();\n    const email = ((_a = location.state) === null || _a === void 0 ? void 0 : _a.email) || '';\n    const event = ((_b = location.state) === null || _b === void 0 ? void 0 : _b.event) || '';\n    const { response, error, fetchData, isLoading } = useFetch();\n    useEffect(() => {\n        inputRefs.current = inputRefs.current.slice(0, length);\n        if (autoFocus && inputRefs.current[0])\n            inputRefs.current[0].focus();\n    }, [length, autoFocus]);\n    // useEffect(() => {\n    //     if (!email) {\n    //         setIsError(true);\n    //         setErrorMessage('Email не надано');\n    //     } else {\n    //         // Відправляємо запит на генерацію коду\n    //         fetchData({\n    //             method: 'POST',\n    //             port: 4004,\n    //             url: 'verify',\n    //             body: { email },\n    //         });\n    //     }\n    // }, [email]);\n    useEffect(() => {\n        if (response) {\n            if (response.success) {\n                navigate(`/${api}/login`);\n            }\n            else {\n                setIsError(true);\n                setErrorMessage(response.message || 'Невірний код');\n            }\n        }\n    }, [response]);\n    useEffect(() => {\n        if (error) {\n            setIsError(true);\n            setErrorMessage(error.message || 'Помилка верифікації');\n        }\n    }, [error]);\n    const updateCode = (index, value) => {\n        var _a;\n        if (!/^\\d*$/.test(value))\n            return;\n        const updated = [...code];\n        updated[index] = value.slice(-1);\n        setCode(updated);\n        if (value && index < length - 1)\n            (_a = inputRefs.current[index + 1]) === null || _a === void 0 ? void 0 : _a.focus();\n    };\n    const handleKey = (index, e) => {\n        var _a, _b, _c;\n        const updated = [...code];\n        if (e.key === 'Backspace') {\n            if (!code[index] && index > 0) {\n                updated[index - 1] = '';\n                setCode(updated);\n                (_a = inputRefs.current[index - 1]) === null || _a === void 0 ? void 0 : _a.focus();\n            }\n            else {\n                updated[index] = '';\n                setCode(updated);\n            }\n        }\n        else if (e.key === 'ArrowLeft' && index > 0) {\n            (_b = inputRefs.current[index - 1]) === null || _b === void 0 ? void 0 : _b.focus();\n        }\n        else if (e.key === 'ArrowRight' && index < length - 1) {\n            (_c = inputRefs.current[index + 1]) === null || _c === void 0 ? void 0 : _c.focus();\n        }\n    };\n    const handlePaste = (e) => {\n        var _a;\n        e.preventDefault();\n        const digits = e.clipboardData.getData('text/plain').replace(/\\D/g, '').slice(0, length);\n        if (!digits)\n            return;\n        const updated = [...code];\n        digits.split('').forEach((digit, i) => {\n            if (i < length)\n                updated[i] = digit;\n        });\n        setCode(updated);\n        const nextIndex = updated.findIndex((d) => !d);\n        (_a = inputRefs.current[nextIndex === -1 ? length - 1 : nextIndex]) === null || _a === void 0 ? void 0 : _a.focus();\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const userCode = code.join('');\n        if (userCode.length !== length) {\n            setIsError(true);\n            setErrorMessage('Введіть повний код');\n            return;\n        }\n        const codeVerify = fetchData({\n            method: 'POST',\n            port: 4004,\n            url: event === 'register' ? 'register/confirm' : 'login/confirm',\n            body: { code: userCode },\n        });\n    };\n    useEffect(() => {\n        if (response && response.success === true) {\n            navigate(event === 'register' ? `/${api}/login` : `/${api}/shop`, { state: { userData: response } });\n        }\n        else if (response && response.success === false) {\n            setIsError(true);\n            setErrorMessage(response.message || 'Невірний код');\n        }\n    }, [response]);\n    return (_jsxs(\"form\", { className: `${cl.codeInputContainer} ${className}`, onSubmit: handleSubmit, children: [Array.from({ length }, (_, index) => (_jsx(\"input\", { ref: (el) => (inputRefs.current[index] = el), type: \"text\", inputMode: \"numeric\", pattern: \"\\\\d*\", maxLength: 1, value: code[index] || '', onChange: (e) => updateCode(index, e.target.value), onKeyDown: (e) => handleKey(index, e), onPaste: index === 0 ? handlePaste : undefined, onFocus: (e) => e.target.select(), disabled: disabled, \"aria-label\": `Digit ${index + 1} of verification code`, className: cl.codeInput, autoComplete: \"one-time-code\" }, index))), _jsx(ButtonRegister, { text: isLoading ? 'Зачекайте...' : 'Відправити' }), isError && _jsx(\"div\", { className: cl.error, children: errorMessage })] }));\n};\nexport default VerificationForm;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n// import React, { useState, useEffect } from 'react';\n// import { api } from '@packages/shared/src/routes/api';\n// import { useNavigate } from 'react-router-dom';\n// import { useFetch } from '@packages/shared/src/utils/hooks/useFetch';\n// import cl from '@/utils/styles/modules/RegisterForm.module.scss';\n// import InputData from '@packages/shared/src/components/UI/InputData/InputData';\n// import ErrorMassage from '@packages/shared/src/components/UI/ErrorMassage/ErrorMassage';\n// import SignWithGoogle from './UI/SignWithGoogle/SignWithGoogle';\n// import Devider from './UI/Devider/Devider';\n// import Terms from './UI/Terms/Terms';\n// import LoginLink from './UI/LoginLink/LoginLink';\n// import ButtonRegister from './UI/ButtonRegister/ButtonRegister';\n// import { FormPropsType } from '@/utils/type/FormType';\n// import VerificationForm from './VerificationForm';\n// import { verify } from 'crypto';\n// export type UserAuthType = {\n//     name?: string;\n//     email: string;\n//     password: string;\n//     event?: 'login' | 'register';\n// };\n// const RegisterForm = () => {\n//     const [isError, setIsError] = useState(false);\n//     const [errorMessage, setErrorMessage] = useState('Акаунт з такими даними зареєстровано');\n//     const [userData, setUserData] = useState<UserAuthType>({\n//         name: '',\n//         email: '',\n//         password: ''\n//     });\n//     const [isSubmit, setIsSubmit] = useState(false);\n//     const navigate = useNavigate();\n//     const { response, error, fetchData } = useFetch<UserAuthType>();\n//     const handleInputChange = (field: keyof UserAuthType, value: string) => {\n//         setUserData((prev) => ({\n//             ...prev,\n//             [field]: value\n//         }));\n//         setIsError(false);\n//     };\n//     useEffect(() => {\n//         if (isSubmit) {\n//             fetchData({\n//                 method: 'POST',\n//                 port: 4004,\n//                 url: 'register',\n//                 body: JSON.stringify(\n//                     {\n//                         name: userData.name,\n//                         email: userData.email,\n//                         password: userData.password,\n//                         event: 'register',\n//                     }\n//                 )\n//             });\n//         }\n//     }, [isSubmit]);\n//     useEffect(() => {\n//         if (response) {\n//             if (response.error || (response as any).success === false) {\n//                 const message = response.error\n//                     || (response as any).message\n//                     || 'Акаунт з такими даними зареєстровано';\n//                 setErrorMessage(message);\n//                 setIsError(true);\n//                 setIsSubmit(false);\n//             } else {\n//                 navigate(`/${api}/verify`);\n//                 // setSwitchForm({type: 'verify'})\n//                 setIsSubmit(false);\n//             }\n//         }\n//     }, [response]);\n//     useEffect(() => {\n//         if (error) {\n//             setErrorMessage(error.message || 'Сталася помилка при реєстрації');\n//             setIsError(true);\n//             setIsSubmit(false);\n//         }\n//     }, [error]);\n//     const handleSubmit = (e: React.FormEvent) => {\n//         e.preventDefault();\n//         const form = e.currentTarget as HTMLFormElement;\n//         if (!form.checkValidity()) {\n//             form.reportValidity();\n//             return;\n//         }\n//         setIsSubmit(true);\n//     };\n//     return (\n//         <div className={cl.formContainer}>\n//             <SignWithGoogle />\n//             <Devider />\n//             <form className={cl.form} onSubmit={handleSubmit}>\n//                 <InputData\n//                     type=\"text\"\n//                     id=\"name\"\n//                     placeholder=\"Введіть ваше ім'я\"\n//                     label=\"Ім'я\"\n//                     required\n//                     name=\"name\"\n//                     onInput={(val) => handleInputChange('name', val)}\n//                 />\n//                 <InputData\n//                     type=\"email\"\n//                     id=\"email\"\n//                     placeholder=\"your@email.com\"\n//                     label=\"Електронна пошта\"\n//                     required\n//                     name=\"email\"\n//                     onInput={(val) => handleInputChange('email', val)}\n//                 />\n//                 <InputData\n//                     type=\"password\"\n//                     id=\"password\"\n//                     placeholder=\"Не менше 8 символів\"\n//                     label=\"Пароль\"\n//                     required\n//                     name=\"password\"\n//                     onInput={(val) => handleInputChange('password', val)}\n//                 />\n//                 <Terms />\n//                 <ButtonRegister\n//                     text=\"Зареєструватися\"\n//                 />\n//                 {isError && <ErrorMassage massage={errorMessage} />}\n//             </form>\n//             <LoginLink type=\"register\" onClick={e => navigate(`/${api}/login`)} />\n//         </div>\n//     );\n// };\n// export default RegisterForm;\nimport React, { useState, useEffect } from 'react';\nimport { api } from '@packages/shared/src/routes/api';\nimport { useNavigate } from 'react-router-dom';\nimport { useFetch } from '@packages/shared/src/utils/hooks/useFetch';\nimport cl from '@/utils/styles/modules/RegisterForm.module.scss';\nimport InputData from '@packages/shared/src/components/UI/InputData/InputData';\nimport ErrorMassage from '@packages/shared/src/components/UI/ErrorMassage/ErrorMassage';\nimport SignWithGoogle from './UI/SignWithGoogle/SignWithGoogle';\nimport Devider from './UI/Devider/Devider';\nimport Terms from './UI/Terms/Terms';\nimport LoginLink from './UI/LoginLink/LoginLink';\nimport ButtonRegister from './UI/ButtonRegister/ButtonRegister';\nconst RegisterForm = () => {\n    const [isError, setIsError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [userData, setUserData] = useState({\n        name: '',\n        email: '',\n        password: '',\n    });\n    const [isSubmit, setIsSubmit] = useState(false);\n    const navigate = useNavigate();\n    const { response, error, fetchData, isLoading } = useFetch();\n    const handleInputChange = (field, value) => {\n        setUserData((prev) => (Object.assign(Object.assign({}, prev), { [field]: value })));\n        setIsError(false);\n        console.log(userData);\n    };\n    useEffect(() => {\n        if (isSubmit) {\n            console.log(\"Відправлено   \", userData);\n            fetchData({\n                method: 'POST',\n                port: 4004,\n                url: 'register/init',\n                body: {\n                    name: userData.name,\n                    email: userData.email,\n                    password: userData.password,\n                },\n            });\n        }\n    }, [isSubmit]);\n    useEffect(() => {\n        if (response) {\n            if (response.success) {\n                navigate(`/${api}/verify`, { state: { email: userData.email, event: 'register' } });\n                setIsSubmit(false);\n            }\n            else {\n                setErrorMessage(response.message || 'Помилка реєстрації');\n                setIsError(true);\n                setIsSubmit(false);\n            }\n        }\n    }, [response]);\n    useEffect(() => {\n        if (error) {\n            setErrorMessage(error.message || 'Сталася помилка при реєстрації');\n            setIsError(true);\n            setIsSubmit(false);\n        }\n    }, [error]);\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        if (!form.checkValidity()) {\n            form.reportValidity();\n            return;\n        }\n        setIsSubmit(true);\n    };\n    return (_jsxs(\"form\", { className: cl.formContainer, onSubmit: handleSubmit, children: [_jsx(SignWithGoogle, {}), _jsx(Devider, {}), _jsxs(\"div\", { className: cl.form, children: [_jsx(InputData, { type: \"text\", id: \"name\", placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0432\\u0430\\u0448\\u0435 \\u0456\\u043C'\\u044F\", label: \"\\u0406\\u043C'\\u044F\", required: true, name: \"name\", onInput: (val) => handleInputChange('name', val) }), _jsx(InputData, { type: \"email\", id: \"email\", placeholder: \"your@email.com\", label: \"\\u0415\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430 \\u043F\\u043E\\u0448\\u0442\\u0430\", required: true, name: \"email\", onInput: (val) => handleInputChange('email', val) }), _jsx(InputData, { type: \"password\", id: \"password\", placeholder: \"\\u041D\\u0435 \\u043C\\u0435\\u043D\\u0448\\u0435 8 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0456\\u0432\", label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", required: true, name: \"password\", onInput: (val) => handleInputChange('password', val) }), _jsx(Terms, {}), _jsx(ButtonRegister, { text: isLoading ? 'Зачекайте...' : 'Зареєструватися' }), isError && _jsx(ErrorMassage, { massage: errorMessage })] }), _jsx(LoginLink, { type: \"register\", onClick: () => navigate(`/${api}/login`) })] }));\n};\nexport default RegisterForm;\n","export const api = 'fashion';\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"wXS4gBiD\",\"googleButton\":\"jtNaQ4Pb\",\"googleIcon\":\"q3A9npCv\",\"form\":\"tMNrKVIM\",\"label\":\"_L22OWm3\",\"icon\":\"TkoDlLtO\",\"passwordToggle\":\"djqMB3W9\"};","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n// import React, { useState, useEffect } from 'react';\n// import { api } from '@packages/shared/src/routes/api';\n// import { useNavigate } from 'react-router-dom';\n// import cl from '@/utils/styles/modules/RegisterForm.module.scss';\n// import InputData from '@packages/shared/src/components/UI/InputData/InputData';\n// import ErrorMassage from '@packages/shared/src/components/UI/ErrorMassage/ErrorMassage';\n// import SignWithGoogle from './UI/SignWithGoogle/SignWithGoogle';\n// import Devider from './UI/Devider/Devider';\n// import Terms from './UI/Terms/Terms';\n// import LoginLink from './UI/LoginLink/LoginLink';\n// import ButtonRegister from './UI/ButtonRegister/ButtonRegister';\n// import { useFetch } from '@packages/shared/src/utils/hooks/useFetch';\n// import { FormPropsType } from '@/utils/type/FormType';\n// type UserLoginType = {\n//     email: string;\n//     password: string;\n// };\n// const LoginForm = () => {\n//     const navigate = useNavigate();\n//     const [isError, setIsError] = useState(false);\n//     const [errorMessage, setErrorMessage] = useState('Помилка входу. Спробуйте ще раз');\n//     const [userData, setUserData] = useState<UserLoginType>({\n//         email: '',\n//         password: '',\n//     });\n//     const { response, error, isLoading, fetchData } = useFetch<UserLoginType, any>();\n//     const handleInputChange = (field: keyof UserLoginType, value: string) => {\n//         setUserData(prev => ({\n//             ...prev,\n//             [field]: value\n//         }));\n//         if (isError) setIsError(false);\n//     };\n//     const handleSubmit = (e: React.FormEvent) => {\n//         e.preventDefault();\n//         const form = e.currentTarget as HTMLFormElement;\n//         if (!form.checkValidity()) {\n//             form.reportValidity();\n//             return;\n//         }\n//         fetchData({\n//             method: 'POST',\n//             port: 4004,\n//             url: 'login',\n//             body: userData,\n//             event: 'login',\n//         });\n//     };\n//     useEffect(() => {\n//         if (response?.success) {\n//             navigate(`/${api}/shop`, {\n//                 state: { userData: response.userData }\n//             });\n//         }\n//         if (response?.success === false || error) {\n//             setIsError(true);\n//             setErrorMessage(response?.message || error?.message || 'Помилка входу');\n//         }\n//     }, [response, error]);\n//     return (\n//         <div className={cl.formContainer}>\n//             <SignWithGoogle />\n//             <Devider />\n//             <form className={cl.form} onSubmit={handleSubmit}>\n//                 <InputData\n//                     type=\"email\"\n//                     id=\"email\"\n//                     placeholder=\"your@email.com\"\n//                     label=\"Електронна пошта\"\n//                     required\n//                     name=\"email\"\n//                     onInput={(val) => handleInputChange('email', val)}\n//                 />\n//                 <InputData\n//                     type=\"password\"\n//                     id=\"password\"\n//                     placeholder=\"Не менше 8 символів\"\n//                     label=\"Пароль\"\n//                     required\n//                     name=\"password\"\n//                     onInput={(val) => handleInputChange('password', val)}\n//                 />\n//                 <Terms />\n//                 <ButtonRegister text={isLoading ? 'Зачекайте...' : 'Увійти'} />\n//                 {isError && <ErrorMassage massage={errorMessage} />}\n//             </form>\n//             <LoginLink type=\"login\" onClick={e => navigate(`/${api}/register`)} />\n//         </div>\n//     );\n// };\n// export default LoginForm;\nimport React, { useState, useEffect } from 'react';\nimport { api } from '@packages/shared/src/routes/api';\nimport { useNavigate } from 'react-router-dom';\nimport cl from '@/utils/styles/modules/RegisterForm.module.scss';\nimport InputData from '@packages/shared/src/components/UI/InputData/InputData';\nimport ErrorMassage from '@packages/shared/src/components/UI/ErrorMassage/ErrorMassage';\nimport SignWithGoogle from './UI/SignWithGoogle/SignWithGoogle';\nimport Devider from './UI/Devider/Devider';\nimport Terms from './UI/Terms/Terms';\nimport LoginLink from './UI/LoginLink/LoginLink';\nimport ButtonRegister from './UI/ButtonRegister/ButtonRegister';\nimport { useFetch } from '@packages/shared/src/utils/hooks/useFetch';\nconst LoginForm = () => {\n    const navigate = useNavigate();\n    const [isSubmit, setIsSubmit] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [userData, setUserData] = useState({\n        email: '',\n        password: '',\n    });\n    const { response, error, isLoading, fetchData } = useFetch();\n    const handleInputChange = (field, value) => {\n        setUserData((prev) => (Object.assign(Object.assign({}, prev), { [field]: value })));\n        setIsError(false);\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        if (!form.checkValidity()) {\n            form.reportValidity();\n            return;\n        }\n        fetchData({\n            method: 'POST',\n            port: 4004,\n            url: 'login/init',\n            body: userData,\n        });\n    };\n    useEffect(() => {\n        if (response === null || response === void 0 ? void 0 : response.success) {\n            navigate(`/${api}/shop`, {\n                state: { userData: response.userData },\n            });\n        }\n        else if ((response === null || response === void 0 ? void 0 : response.success) === false) {\n            setIsError(true);\n            setErrorMessage(response.message || 'Помилка входу');\n        }\n    }, [response]);\n    useEffect(() => {\n        if (error) {\n            setIsError(true);\n            setErrorMessage(error.message || 'Помилка входу');\n        }\n    }, [error]);\n    useEffect(() => {\n        if (response) {\n            if (response.success) {\n                navigate(`/${api}/verify`, { state: { email: userData.email, event: 'login' } });\n                setIsSubmit(false);\n            }\n            else {\n                setErrorMessage(response.message || 'Помилка реєстрації');\n                setIsError(true);\n                setIsSubmit(false);\n            }\n        }\n    }, [response]);\n    // useEffect(() => {\n    //     if (isSubmit) {\n    //       console.log(\"Відправлено   \", userData)\n    //       fetchData({\n    //         method: 'POST',\n    //         port: 4004,\n    //         url: 'login/init',\n    //         body: {\n    //           email: userData.email,\n    //           password: userData.password,\n    //         },\n    //       });\n    //     }\n    //   }, [isSubmit]);\n    return (_jsxs(\"form\", { className: cl.formContainer, onSubmit: handleSubmit, children: [_jsx(SignWithGoogle, {}), _jsx(Devider, {}), _jsxs(\"div\", { className: cl.form, onSubmit: handleSubmit, children: [_jsx(InputData, { type: \"email\", id: \"email\", placeholder: \"your@email.com\", label: \"\\u0415\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430 \\u043F\\u043E\\u0448\\u0442\\u0430\", required: true, name: \"email\", onInput: (val) => handleInputChange('email', val) }), _jsx(InputData, { type: \"password\", id: \"password\", placeholder: \"\\u041D\\u0435 \\u043C\\u0435\\u043D\\u0448\\u0435 8 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0456\\u0432\", label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", required: true, name: \"password\", onInput: (val) => handleInputChange('password', val) }), _jsx(Terms, {}), _jsx(ButtonRegister, { text: isLoading ? 'Зачекайте...' : 'Увійти' }), isError && _jsx(ErrorMassage, { massage: errorMessage })] }), _jsx(LoginLink, { type: \"login\", onClick: () => navigate(`/${api}/register`) })] }));\n};\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"massage\":\"l1IHRsYU\"};","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport cl from './ErrorMassage.module.scss';\nconst ErrorMassage = ({ massage }) => {\n    return (_jsx(\"div\", { children: _jsx(\"span\", { className: cl.massage, children: massage ? massage : 'Непередбачувана помилка. Спробуйте ще раз!' }) }));\n};\nexport default ErrorMassage;\n","// extracted by mini-css-extract-plugin\nexport default {\"terms\":\"s9rUYAMV\",\"checkbox\":\"goteK97U\",\"termsText\":\"S9pFQttD\"};","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport cl from './Terms.module.scss';\nconst Terms = () => {\n    return (_jsxs(\"div\", { className: cl.terms, children: [_jsx(\"input\", { type: \"checkbox\", id: \"terms\", name: \"terms\", required: true, className: cl.checkbox }), _jsxs(\"label\", { htmlFor: \"terms\", className: cl.termsText, children: [\"\\u042F \\u043F\\u043E\\u0433\\u043E\\u0434\\u0436\\u0443\\u044E\\u0441\\u044C \\u0437 \", _jsx(\"a\", { href: \"#\", children: \"\\u0423\\u043C\\u043E\\u0432\\u0430\\u043C\\u0438 \\u0432\\u0438\\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0430\\u043D\\u043D\\u044F\" }), \" \\u0442\\u0430 \", _jsx(\"a\", { href: \"#\", children: \"\\u041F\\u043E\\u043B\\u0456\\u0442\\u0438\\u043A\\u043E\\u044E \\u043A\\u043E\\u043D\\u0444\\u0456\\u0434\\u0435\\u043D\\u0446\\u0456\\u0439\\u043D\\u043E\\u0441\\u0442\\u0456\" })] })] }));\n};\nexport default Terms;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { useState, useCallback } from 'react';\nimport { api } from '../../../../../packages/shared/src/routes/api';\nexport const useFetch = () => {\n    const [response, setResponse] = useState(null);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const fetchData = useCallback((params) => __awaiter(void 0, void 0, void 0, function* () {\n        const { method, port, url, body } = params;\n        setIsLoading(true);\n        setError(null);\n        try {\n            const fetchConfig = {\n                method,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            };\n            if (method === 'POST') {\n                const requestBody = Object.assign({}, (body || {}));\n                // Додаємо поле event до тіла POST-запиту\n                fetchConfig.body = JSON.stringify(requestBody);\n            }\n            const res = yield fetch(`http://localhost:${port}/${api}/${url}`, fetchConfig);\n            const data = yield res.json();\n            if (!res.ok) {\n                // throw new Error(`HTTP error! status: ${res.status}`);\n                throw new Error(`Сталася помилка. Скоротіть довжину тексту або спробуйте пізніше`);\n            }\n            if (data && typeof data === 'object' && data.success === false) {\n                const errorMessage = data.error || data.message || 'Сталася помилка';\n                throw new Error(errorMessage);\n            }\n            if (method === 'GET' && !Array.isArray(data)) {\n                throw new Error('Очікувався масив обʼєктів у відповіді GET');\n            }\n            setResponse(data);\n        }\n        catch (err) {\n            setError(err);\n            setResponse({ error: err.message });\n        }\n        finally {\n            setIsLoading(false);\n        }\n    }), []);\n    return {\n        response,\n        error,\n        isLoading,\n        fetchData,\n    };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loginLink\":\"Qr96x46q\"};","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport cl from './LoginLink.module.scss';\nconst LoginLink = ({ type, onClick }) => {\n    return (_jsx(\"div\", { className: cl.loginLink, children: type === 'register' ? (_jsxs(_Fragment, { children: [\"\\u0412\\u0436\\u0435 \\u043C\\u0430\\u0454\\u0442\\u0435 \\u043E\\u0431\\u043B\\u0456\\u043A\\u043E\\u0432\\u0438\\u0439 \\u0437\\u0430\\u043F\\u0438\\u0441? \", _jsx(\"a\", { href: \"#\", onClick: (e) => { e.preventDefault(); onClick(e); }, children: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\" })] })) : (_jsxs(_Fragment, { children: [\"\\u041D\\u0435 \\u043C\\u0430\\u0454\\u0442\\u0435 \\u043E\\u0431\\u043B\\u0456\\u043A\\u043E\\u0432\\u043E\\u0433\\u043E \\u0437\\u0430\\u043F\\u0438\\u0441\\u0443? \", _jsx(\"a\", { href: \"#\", onClick: (e) => { e.preventDefault(); onClick(e); }, children: \"\\u0417\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u0443\\u0432\\u0430\\u0442\\u0438\\u0441\\u044F\" })] })) }));\n};\nexport default LoginLink;\n"],"names":["switchForm","setSwitchForm","useState","type","useLocation","pathname","endsWith","children","Outlet","App","className","module","exports","loading","setLoading","navigate","useNavigate","onClick","__awaiter","thisArg","_arguments","generator","Promise","res","setTimeout","localStorage","setItem","JSON","stringify","name","email","avatar","provider","api","P","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","disabled","src","alt","placeholder","label","min","max","id","required","onInput","inputProps","minLength","title","pattern","htmlFor","Object","assign","currentTarget","f","k","Symbol","for","l","m","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","h","call","defaultProps","$$typeof","props","_owner","current","Fragment","jsx","jsxs","text","length","autoFocus","_a","_b","code","setCode","Array","fill","isError","setIsError","errorMessage","setErrorMessage","inputRefs","useRef","location","event","state","response","error","fetchData","isLoading","useFetch","useEffect","slice","focus","success","message","handlePaste","preventDefault","digits","clipboardData","getData","replace","updated","split","forEach","digit","i","nextIndex","findIndex","userData","codeInputContainer","onSubmit","userCode","join","method","port","url","body","from","_","index","el","inputMode","maxLength","onChange","test","updateCode","target","onKeyDown","_c","handleKey","onPaste","undefined","onFocus","select","codeInput","autoComplete","ButtonRegister","setUserData","password","isSubmit","setIsSubmit","handleInputChange","field","prev","console","log","formContainer","form","checkValidity","reportValidity","val","massage","handleSubmit","href","setResponse","setError","setIsLoading","useCallback","params","fetchConfig","headers","requestBody","fetch","data","json","ok","Error","isArray","err"],"sourceRoot":""}